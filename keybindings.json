// 将键绑定放在此文件中以覆盖默认值
[
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    // 配置vim+vscode的escape
    {
        "key": "escape",
        "command": "multiCommand.multiEscape",
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t q",
        "command": "tabnine.chat.focus-input"
    },
    {
        "key": "ctrl+shift+q",
        "command": "-tabnine.chat.focus-input"
    },
    {
        "key": "ctrl+t e",
        "command": "tabnine.chat.commands.explain-code"
    },
    {
        "key": "ctrl+t f",
        "command": "tabnine.chat.commands.fix-code"
    },
    {
        "key": "ctrl+t d",
        "command": "tabnine.chat.commands.document-code"
    },
    {
        "key": "ctrl+t t",
        "command": "tabnine.chat.commands.generate-tests"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+g",
        "command": "-extension.vim_ctrl+g",
        "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
    },
    {
        "key": "ctrl+g e",
        "command": "github.copilot.interactiveEditor.explain"
    },
    {
        "key": "ctrl+g t",
        "command": "github.copilot.interactiveEditor.generateTests"
    },
    {
        "key": "ctrl+g d",
        "command": "github.copilot.interactiveEditor.generateDocs"
    },
    {
        "key": "ctrl+g f",
        "command": "workbench.panel.chat.view.copilot.focus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+m q",
        "command": "bookmarks.toggleLabeled"
    },
    {
        "key": "ctrl+m l",
        "command": "bookmarks.listFromAllFiles"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "-bookmarks.expandSelectionToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "-bookmarks.expandSelectionToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "-bookmarks.shrinkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "ctrl+t a",
        "command": "tabnine.chat.focus"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.copyEditorToNewWindow",
        "when": "activeEditor"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
    {
        "key": "ctrl+alt+o",
        "command": "-workbench.action.remote.showMenu"
    },
    {
        "key": "ctrl+alt+c",
        "command": "workbench.output.action.clearOutput"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+m",
        "command": "-extension.vim_ctrl+m",
        "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+m t",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.view.extension.bookmarks"
    },
    {
        "key": "ctrl+m p",
        "command": "bookmarks.jumpToPrevious"
    },
    {
        "key": "ctrl+m n",
        "command": "bookmarks.jumpToNext"
    },
    {
        "key": "ctrl+m right",
        "command": "bookmarks.jumpToNext"
    },
    {
        "key": "ctrl+m left",
        "command": "bookmarks.jumpToPrevious"
    },
    {
        "key": "ctrl+oem_7",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    }
]